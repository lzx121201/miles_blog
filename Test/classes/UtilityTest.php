<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-04-30 at 17:01:07.
 */
require_once '../classes/Utility.php';
require_once '../classes/Post.php';

class UtilityTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Utility
     */
    protected $object;

    
    /**
     * testFormatDate
     * @group Utility
     * Test the FormatDate method with date in different format
     * 
     */
    public function testFormatDate() {
        $input = "2017-04-30";
        $expect = "30 Apr 2017";
        $this->assertEquals($expect, Utility::formatDate($input, "j M Y")
        );
    }

    /**
     * testChangeToHashTag
     * @group Utility
     * Test the ChangeToHashTag method with String input delimited by ','
     * 
     */
    public function testChangeToHashTag() {
        $expect = array("#test");
        $input="test,";
        $this->assertEquals(
                $expect, Utility::changeToHashTag($input)
        );
    }

   /**
     * testSplitStringByDelimiter
     * @group Utility
     * Test the SplitStringByDelimiter method with String input and user-defined delimiter
     * 
     */
    public function testSplitStringByDelimiter() {
        $input = "test1,test2,";
        $delimiter = ",";
        $expect = array("test1","test2");
        $this->assertEquals(
                $expect, Utility::splitStringByDelimiter($delimiter, $input)
                );
    }

     /**
     * testFilterCommentByKeyword
     * @group Utility
     * Test the FilterCommentByKeyword method with an array of comments and user-defined keywords
     * 
     */
    public function testFilterCommentByKeyword() {
        $c1 = new Comment(1, 1, 1, "nice", "2017-04-28 01:00:43", 0);
        $c2 = new Comment(2, 1, 1, "good", "2017-04-28 04:00:43", 0);
        $input=array($c1,$c2);
$keyword = "nice";
$expect=array($c2);
        $this->asserEquals(
  $expect, Utility::filterCommentByKeyword($input, $keyword)
        );
    }

    /**
     * testGetFilteredComment
     * @group Utility
     * Test the GetFilteredComment method with an array of comments and user-defined keywords
     * 
     */
    public function testGetFilteredComment() {
         $c1 = new Comment(1, 1, 1, "nice", "2017-04-28 01:00:43", 0);
        $c2 = new Comment(2, 1, 1, "good", "2017-04-28 04:00:43", 0);
        $input=array($c1,$c2);
$keyword = "nice";
$expect=array($c1);
        $this->asserEquals(
  $expect, Utility::filterCommentByKeyword($input, $keyword)
        );
    }

}
